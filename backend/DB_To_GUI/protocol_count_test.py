import unittest
import protocol_counter

class TestProtocolCounter(unittest.TestCase):
    def test_analyze_packets(self):
        packets = [
            [188, 36, 17, 153, 14, 247, 124, 194, 85, 226, 251, 183, 8, 0, 69, 0, 0, 164, 212, 68, 64, 0, 112, 6, 133, 98, 143, 170, 82, 76, 192, 168, 14, 14, 135, 150, 0, 22, 192, 117, 246, 176, 82, 233, 34, 187, 80, 24, 8, 2, 105, 46, 0, 0, 167, 171, 229, 192, 7, 116, 254, 98, 178, 249, 138, 68, 14, 25, 249, 41, 105, 65, 86, 253, 86, 144, 170, 116, 63, 39, 57, 186, 113, 110, 232, 18, 122, 135, 197, 241, 229, 189, 109, 63, 156, 89, 103, 61, 138, 81, 187, 196, 2, 100, 218, 252, 134, 171, 57, 77, 92, 233, 151, 239, 57, 69, 19, 138, 72, 213, 5, 143, 90, 136, 108, 192, 201, 177, 20, 177, 250, 86, 141, 61, 48, 250, 237, 255, 91, 55, 99, 106, 47, 30, 183, 161, 167, 241, 252, 72, 250, 100, 37, 199, 245, 160, 231, 220, 29, 57, 139, 48, 250, 186, 27, 235, 189, 93, 163, 109, 184, 85, 57, 183, 227, 174, 217, 238], [124, 194, 85, 226, 251, 183, 188, 36, 17, 153, 14, 247, 8, 0, 69, 8, 0, 164, 4, 181, 64, 0, 64, 6, 132, 234, 192, 168, 14, 14, 143, 170, 82, 76, 0, 22, 135, 150, 82, 233, 34, 187, 192, 117, 247, 44, 80, 24, 36, 216, 177, 67, 0, 0, 67, 14, 245, 11, 160, 15, 153, 202, 99, 196, 169, 106, 167, 102, 27, 23, 87, 14, 171, 92, 17, 82, 154, 136, 50, 18, 204, 143, 120, 12, 44, 123, 45, 212, 236, 86, 48, 11, 87, 36, 61, 75, 81, 4, 158, 133, 149, 245, 234, 95, 207, 116, 158, 9, 13, 140, 95, 87, 216, 255, 136, 132, 18, 46, 112, 2, 166, 29, 83, 225, 176, 183, 122, 29, 196, 12, 4, 43, 249, 230, 228, 86, 75, 89, 73, 31, 103, 212, 153, 108, 181, 76, 253, 9, 213, 138, 134, 228, 54, 176, 164, 22, 188, 96, 76, 126, 201, 135, 92, 86, 108, 249, 108, 219, 87, 54, 45, 214, 176, 160, 1, 197, 83, 239], [124, 194, 85, 226, 251, 183, 188, 36, 17, 153, 14, 247, 8, 0, 69, 8, 0, 148, 4, 182, 64, 0, 64, 6, 132, 249, 192, 168, 14, 14, 143, 170, 82, 76, 0, 22, 135, 150, 82, 233, 35, 55, 192, 117, 247, 44, 80, 24, 36, 216, 177, 51, 0, 0, 164, 199, 217, 141, 51, 112, 149, 160, 95, 154, 131, 245, 167, 20, 230, 22, 43, 73, 130, 223, 24, 174, 48, 237, 76, 236, 80, 135, 80, 66, 146, 245, 85, 57, 241, 4, 255, 242, 211, 224, 186, 160, 249, 222, 142, 228, 128, 35, 35, 48, 176, 175, 127, 30, 187, 77, 19, 30, 126, 142, 21, 174, 130, 135, 14, 120, 187, 20, 4, 22, 50, 113, 112, 115, 102, 38, 112, 94, 187, 39, 209, 119, 81, 244, 47, 203, 28, 232, 132, 165, 37, 44, 203, 103, 125, 207, 218, 161, 137, 111, 41, 177, 123, 148, 0, 70, 11, 183], [124, 194, 85, 226, 251, 183, 188, 36, 17, 153, 14, 247, 8, 0, 69, 8, 0, 132, 4, 183, 64, 0, 64, 6, 133, 8, 192, 168, 14, 14, 143, 170, 82, 76, 0, 22, 135, 150, 82, 233, 35, 163, 192, 117, 247, 44, 80, 24, 36, 216, 177, 35, 0, 0, 190, 39, 104, 149, 18, 107, 235, 196, 247, 70, 153, 98, 219, 242, 112, 247, 140, 249, 2, 229, 113, 73, 60, 4, 203, 249, 74, 35, 13, 60, 199, 59, 223, 154, 207, 132, 224, 179, 12, 204, 157, 62, 32, 148, 151, 197, 186, 122, 233, 106, 96, 98, 252, 91, 25, 194, 6, 117, 77, 227, 47, 56, 169, 60, 217, 158, 89, 160, 71, 177, 211, 96, 157, 89, 115, 157, 162, 6, 125, 133, 6, 193, 218, 40, 19, 55, 153, 193, 229, 113, 81, 18], [188, 36, 17, 153, 14, 247, 124, 194, 85, 226, 251, 183, 8, 0, 69, 0, 0, 40, 212, 69, 64, 0, 112, 6, 133, 221, 143, 170, 82, 76, 192, 168, 14, 14, 135, 150, 0, 22, 192, 117, 247, 44, 82, 233, 35, 255, 80, 16, 8, 1, 64, 239, 0, 0, 0, 0, 0, 0, 0, 0], [188, 36, 17, 153, 14, 247, 124, 194, 85, 226, 251, 183, 8, 0, 69, 0, 0, 148, 212, 70, 64, 0, 112, 6, 133, 112, 143, 170, 82, 76, 192, 168, 14, 14, 135, 150, 0, 22, 192, 117, 247, 44, 82, 233, 35, 255, 80, 24, 8, 1, 136, 193, 0, 0, 1, 36, 211, 181, 71, 115, 249, 59, 235, 197, 12, 89, 84, 102, 189, 64, 174, 177, 50, 95, 164, 40, 239, 47, 17, 134, 211, 112, 108, 205, 150, 201, 226, 149, 0, 67, 123, 59, 36, 130, 34, 227, 168, 122, 45, 6, 67, 173, 92, 58, 242, 70, 16, 213, 198, 177, 77, 84, 91, 71, 15, 59, 191, 4, 7, 208, 79, 54, 178, 40, 71, 67, 181, 142, 121, 49, 8, 193, 53, 20, 87, 149, 184, 69, 36, 222, 223, 40, 69, 79, 157, 24, 109, 105, 98, 218, 167, 144, 249, 158, 82, 196, 176, 242, 51, 39, 132, 68], [124, 194, 85, 226, 251, 183, 188, 36, 17, 153, 14, 247, 8, 0, 69, 8, 0, 148, 4, 184, 64, 0, 64, 6, 132, 247, 192, 168, 14, 14, 143, 170, 82, 76, 0, 22, 135, 150, 82, 233, 35, 255, 192, 117, 247, 152, 80, 24, 36, 216, 177, 51, 0, 0, 32, 119, 60, 93, 74, 224, 74, 227, 168, 26, 8, 123, 6, 173, 77, 111, 37, 19, 178, 168, 134, 91, 33, 142, 15, 120, 239, 70, 2, 76, 179, 178, 31, 146, 140, 4, 91, 87, 37, 211, 82, 104, 242, 217, 53, 163, 129, 83, 115, 236, 28, 238, 187, 24, 114, 181, 230, 77, 248, 71, 186, 36, 59, 206, 192, 227, 241, 215, 198, 212, 56, 85, 201, 186, 79, 81, 13, 52, 13, 101, 194, 213, 157, 124, 35, 246, 223, 27, 182, 173, 140, 126, 51, 249, 12, 53, 120, 254, 204, 155, 190, 188, 23, 152, 108, 181, 239, 251], [188, 36, 17, 153, 14, 247, 124, 194, 85, 226, 251, 183, 8, 0, 69, 0, 0, 132, 212, 71, 64, 0, 112, 6, 133, 127, 143, 170, 82, 76, 192, 168, 14, 14, 135, 150, 0, 22, 192, 117, 247, 152, 82, 233, 36, 107, 80, 24, 8, 1, 157, 15, 0, 0, 114, 23, 149, 141, 176, 209, 228, 52, 1, 120, 226, 103, 156, 139, 113, 55, 53, 220, 115, 172, 195, 240, 31, 173, 170, 172, 5, 210, 89, 246, 171, 23, 167, 9, 111, 70, 222, 89, 203, 193, 108, 65, 173, 22, 199, 127, 250, 11, 77, 105, 213, 140, 103, 121, 252, 177, 37, 223, 251, 255, 133, 188, 227, 208, 58, 253, 111, 141, 114, 148, 167, 159, 143, 82, 64, 206, 34, 18, 55, 234, 131, 241, 207, 197, 85, 27, 64, 99, 54, 175, 21, 3], [124, 194, 85, 226, 251, 183, 188, 36, 17, 153, 14, 247, 8, 0, 69, 8, 0, 148, 4, 185, 64, 0, 64, 6, 132, 246, 192, 168, 14, 14, 143, 170, 82, 76, 0, 22, 135, 150, 82, 233, 36, 107, 192, 117, 247, 244, 80, 24, 36, 216, 177, 51, 0, 0, 11, 142, 131, 149, 60, 165, 172, 8, 90, 137, 235, 202, 130, 218, 63, 19, 36, 21, 188, 119, 28, 14, 2, 115, 121, 235, 143, 127, 221, 163, 103, 57, 57, 168, 131, 76, 18, 173, 77, 131, 241, 132, 125, 69, 124, 192, 108, 72, 92, 14, 49, 158, 33, 202, 189, 20, 78, 67, 160, 46, 156, 186, 130, 200, 200, 33, 149, 91, 151, 85, 246, 103, 234, 42, 113, 168, 173, 67, 252, 162, 28, 95, 176, 43, 196, 69, 165, 101, 103, 248, 207, 78, 253, 141, 180, 185, 39, 172, 4, 111, 209, 132, 95, 117, 202, 196, 114, 196], [188, 36, 17, 153, 14, 247, 124, 194, 85, 226, 251, 183, 8, 0, 69, 0, 0, 132, 212, 72, 64, 0, 112, 6, 133, 126, 143, 170, 82, 76, 192, 168, 14, 14, 135, 150, 0, 22, 192, 117, 247, 244, 82, 233, 36, 215, 80, 24, 8, 0, 236, 251, 0, 0, 18, 10, 137, 27, 46, 194, 15, 102, 25, 133, 252, 96, 64, 225, 54, 182, 24, 180, 91, 88, 241, 198, 217, 75, 239, 16, 63, 247, 212, 88, 147, 116, 80, 172, 255, 209, 79, 83, 22, 148, 0, 6, 130, 130, 125, 233, 48, 67, 127, 93, 28, 166, 68, 239, 136, 14, 6, 19, 56, 138, 218, 42, 207, 233, 29, 201, 67, 105, 16, 147, 116, 200, 128, 89, 26, 41, 180, 182, 108, 252, 189, 15, 109, 64, 117, 131, 175, 136, 185, 253, 48, 68]
        ]

        expected_output = {
            'network_layer': {'IPv4': 10},
            'transport_layer': {'TCP': 10},
            'application_layer': {'SSH': 10}
        }

        result = protocol_counter.analyze_packets(packets)

        self.assertEqual(result, expected_output)

if __name__ == '__main__':
    unittest.main()
